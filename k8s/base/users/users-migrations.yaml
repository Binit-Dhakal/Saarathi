apiVersion: v1
data:
  000001_create_users_table.down.sql: |
    drop table if exists roles;
    drop table if exists users;
    drop table if exists rider_profiles;
    drop table if exists driver_profiles;
  000001_create_users_table.up.sql: |
    create extension if not exists "pgcrypto";

    create table if not exists roles (
            id serial Primary key,
            name varchar(255) not null unique
    );

    create table if not exists  users(
            id uuid  primary  key default gen_random_uuid(),
            name text not null,
            email varchar(255) not null unique,
            country varchar(255),
            phone_number varchar(255),
            password varchar(255) not null,
            created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
    );

    create table if not exists rider_profiles (
            id uuid  primary  key default gen_random_uuid(),
            user_id uuid not null unique references users(id) on delete cascade,
            payment_info text,
            created_at timestamptz default current_timestamp,
            updated_at timestamptz default current_timestamp
    );

    create table if not exists driver_profiles (
            id uuid  primary  key default gen_random_uuid(),
            user_id uuid not null unique references users(id) on delete cascade,
            license_number varchar(255),
            vehicle_number varchar(255),
            vehicle_model varchar(255),
            vehicle_make varchar(255),
            created_at timestamptz default current_timestamp,
            updated_at timestamptz default current_timestamp
    );

    insert into roles(name) values('admin'),('rider'),('driver');
  000002_create_permissions_table.down.sql: |+
    drop table if exists permissions;
    drop table if exists role_permissions;
    drop table if exists user_roles;

  000002_create_permissions_table.up.sql: |
    create table if not exists permissions (
            id  serial primary key,
            code varchar(255) not null unique,
            description text
    );

    -- Role <-> Permission (many-to-many)
    create table if not exists role_permissions(
            role_id int not null references roles(id) on delete cascade,
            permission_id int not null references permissions(id) on delete cascade,
            primary key (role_id, permission_id)
    );

    -- User <-> Role (many-to-many)
    create table if not exists user_roles (
            user_id uuid not null references users(id) on delete cascade,
            role_id int not null references roles(id) on delete cascade,
            PRIMARY KEY(user_id, role_id)
    );
  000003_create-tokens-table.down.sql: |
    drop index idx_tokens_user_id;
    drop table if exists tokens;
  000003_create-tokens-table.up.sql: |
    create table if not exists tokens (
            id serial primary key,
            user_id uuid not null references users(id) on delete cascade,
            refresh_token text not null unique,
            role_id int not null references roles(id) on delete cascade,
            expires_at TIMESTAMPTZ not null,
            created_at TIMESTAMPTZ not null default NOW()
    );

    CREATE index idx_tokens_user_id on tokens(user_id);
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: users-migrations
