// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: proto/ride_matching/ride_matching.proto

package ridematchingv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DriverAccepted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	TripId        string                 `protobuf:"bytes,2,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	CarType       string                 `protobuf:"bytes,3,opt,name=car_type,json=carType,proto3" json:"car_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DriverAccepted) Reset() {
	*x = DriverAccepted{}
	mi := &file_proto_ride_matching_ride_matching_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverAccepted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverAccepted) ProtoMessage() {}

func (x *DriverAccepted) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ride_matching_ride_matching_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverAccepted.ProtoReflect.Descriptor instead.
func (*DriverAccepted) Descriptor() ([]byte, []int) {
	return file_proto_ride_matching_ride_matching_proto_rawDescGZIP(), []int{0}
}

func (x *DriverAccepted) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *DriverAccepted) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *DriverAccepted) GetCarType() string {
	if x != nil {
		return x.CarType
	}
	return ""
}

var File_proto_ride_matching_ride_matching_proto protoreflect.FileDescriptor

const file_proto_ride_matching_ride_matching_proto_rawDesc = "" +
	"\n" +
	"'proto/ride_matching/ride_matching.proto\x12\x0fridematching.v1\"a\n" +
	"\x0eDriverAccepted\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x12\x17\n" +
	"\atrip_id\x18\x02 \x01(\tR\x06tripId\x12\x19\n" +
	"\bcar_type\x18\x03 \x01(\tR\acarTypeB\xd2\x01\n" +
	"\x13com.ridematching.v1B\x11RideMatchingProtoP\x01ZKgithub.com/Binit-Dhakal/Saarathi/tripspb/proto/ride_matching;ridematchingv1\xa2\x02\x03RXX\xaa\x02\x0fRidematching.V1\xca\x02\x0fRidematching\\V1\xe2\x02\x1bRidematching\\V1\\GPBMetadata\xea\x02\x10Ridematching::V1b\x06proto3"

var (
	file_proto_ride_matching_ride_matching_proto_rawDescOnce sync.Once
	file_proto_ride_matching_ride_matching_proto_rawDescData []byte
)

func file_proto_ride_matching_ride_matching_proto_rawDescGZIP() []byte {
	file_proto_ride_matching_ride_matching_proto_rawDescOnce.Do(func() {
		file_proto_ride_matching_ride_matching_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_ride_matching_ride_matching_proto_rawDesc), len(file_proto_ride_matching_ride_matching_proto_rawDesc)))
	})
	return file_proto_ride_matching_ride_matching_proto_rawDescData
}

var file_proto_ride_matching_ride_matching_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_ride_matching_ride_matching_proto_goTypes = []any{
	(*DriverAccepted)(nil), // 0: ridematching.v1.DriverAccepted
}
var file_proto_ride_matching_ride_matching_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_ride_matching_ride_matching_proto_init() }
func file_proto_ride_matching_ride_matching_proto_init() {
	if File_proto_ride_matching_ride_matching_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_ride_matching_ride_matching_proto_rawDesc), len(file_proto_ride_matching_ride_matching_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_ride_matching_ride_matching_proto_goTypes,
		DependencyIndexes: file_proto_ride_matching_ride_matching_proto_depIdxs,
		MessageInfos:      file_proto_ride_matching_ride_matching_proto_msgTypes,
	}.Build()
	File_proto_ride_matching_ride_matching_proto = out.File
	file_proto_ride_matching_ride_matching_proto_goTypes = nil
	file_proto_ride_matching_ride_matching_proto_depIdxs = nil
}
