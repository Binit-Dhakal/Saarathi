// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/driverspb/driver_state.proto

package driverspb

import (
	common "github.com/Binit-Dhakal/Saarathi/pkg/contracts/proto/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// command
type TripOfferRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TripId        string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	DriverId      string                 `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	PickUp        *common.Coordinates    `protobuf:"bytes,3,opt,name=pick_up,json=pickUp,proto3" json:"pick_up,omitempty"`
	DropOff       *common.Coordinates    `protobuf:"bytes,4,opt,name=drop_off,json=dropOff,proto3" json:"drop_off,omitempty"`
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TripOfferRequest) Reset() {
	*x = TripOfferRequest{}
	mi := &file_proto_driverspb_driver_state_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TripOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripOfferRequest) ProtoMessage() {}

func (x *TripOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_driverspb_driver_state_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripOfferRequest.ProtoReflect.Descriptor instead.
func (*TripOfferRequest) Descriptor() ([]byte, []int) {
	return file_proto_driverspb_driver_state_proto_rawDescGZIP(), []int{0}
}

func (x *TripOfferRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *TripOfferRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *TripOfferRequest) GetPickUp() *common.Coordinates {
	if x != nil {
		return x.PickUp
	}
	return nil
}

func (x *TripOfferRequest) GetDropOff() *common.Coordinates {
	if x != nil {
		return x.DropOff
	}
	return nil
}

func (x *TripOfferRequest) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

// Reply
type OfferAccepted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	TripId        string                 `protobuf:"bytes,2,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OfferAccepted) Reset() {
	*x = OfferAccepted{}
	mi := &file_proto_driverspb_driver_state_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OfferAccepted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferAccepted) ProtoMessage() {}

func (x *OfferAccepted) ProtoReflect() protoreflect.Message {
	mi := &file_proto_driverspb_driver_state_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferAccepted.ProtoReflect.Descriptor instead.
func (*OfferAccepted) Descriptor() ([]byte, []int) {
	return file_proto_driverspb_driver_state_proto_rawDescGZIP(), []int{1}
}

func (x *OfferAccepted) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *OfferAccepted) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

type OfferRejected struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	TripId        string                 `protobuf:"bytes,2,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OfferRejected) Reset() {
	*x = OfferRejected{}
	mi := &file_proto_driverspb_driver_state_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OfferRejected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferRejected) ProtoMessage() {}

func (x *OfferRejected) ProtoReflect() protoreflect.Message {
	mi := &file_proto_driverspb_driver_state_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferRejected.ProtoReflect.Descriptor instead.
func (*OfferRejected) Descriptor() ([]byte, []int) {
	return file_proto_driverspb_driver_state_proto_rawDescGZIP(), []int{2}
}

func (x *OfferRejected) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *OfferRejected) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

type OfferTimedout struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TripId        string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OfferTimedout) Reset() {
	*x = OfferTimedout{}
	mi := &file_proto_driverspb_driver_state_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OfferTimedout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferTimedout) ProtoMessage() {}

func (x *OfferTimedout) ProtoReflect() protoreflect.Message {
	mi := &file_proto_driverspb_driver_state_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferTimedout.ProtoReflect.Descriptor instead.
func (*OfferTimedout) Descriptor() ([]byte, []int) {
	return file_proto_driverspb_driver_state_proto_rawDescGZIP(), []int{3}
}

func (x *OfferTimedout) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

type OfferAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accepted      bool                   `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OfferAck) Reset() {
	*x = OfferAck{}
	mi := &file_proto_driverspb_driver_state_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OfferAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferAck) ProtoMessage() {}

func (x *OfferAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_driverspb_driver_state_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferAck.ProtoReflect.Descriptor instead.
func (*OfferAck) Descriptor() ([]byte, []int) {
	return file_proto_driverspb_driver_state_proto_rawDescGZIP(), []int{4}
}

func (x *OfferAck) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

var File_proto_driverspb_driver_state_proto protoreflect.FileDescriptor

const file_proto_driverspb_driver_state_proto_rawDesc = "" +
	"\n" +
	"\"proto/driverspb/driver_state.proto\x12\x0fdriversstate.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x16proto/common/geo.proto\"\xef\x01\n" +
	"\x10TripOfferRequest\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\x12\x1b\n" +
	"\tdriver_id\x18\x02 \x01(\tR\bdriverId\x123\n" +
	"\apick_up\x18\x03 \x01(\v2\x1a.common.geo.v1.CoordinatesR\x06pickUp\x125\n" +
	"\bdrop_off\x18\x04 \x01(\v2\x1a.common.geo.v1.CoordinatesR\adropOff\x129\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"E\n" +
	"\rOfferAccepted\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x12\x17\n" +
	"\atrip_id\x18\x02 \x01(\tR\x06tripId\"E\n" +
	"\rOfferRejected\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x12\x17\n" +
	"\atrip_id\x18\x02 \x01(\tR\x06tripId\"(\n" +
	"\rOfferTimedout\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\"&\n" +
	"\bOfferAck\x12\x1a\n" +
	"\baccepted\x18\x01 \x01(\bR\bacceptedB@Z>github.com/Binit-Dhakal/Saarathi/pkg/contracts/proto/driverspbb\x06proto3"

var (
	file_proto_driverspb_driver_state_proto_rawDescOnce sync.Once
	file_proto_driverspb_driver_state_proto_rawDescData []byte
)

func file_proto_driverspb_driver_state_proto_rawDescGZIP() []byte {
	file_proto_driverspb_driver_state_proto_rawDescOnce.Do(func() {
		file_proto_driverspb_driver_state_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_driverspb_driver_state_proto_rawDesc), len(file_proto_driverspb_driver_state_proto_rawDesc)))
	})
	return file_proto_driverspb_driver_state_proto_rawDescData
}

var file_proto_driverspb_driver_state_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_driverspb_driver_state_proto_goTypes = []any{
	(*TripOfferRequest)(nil),      // 0: driversstate.v1.TripOfferRequest
	(*OfferAccepted)(nil),         // 1: driversstate.v1.OfferAccepted
	(*OfferRejected)(nil),         // 2: driversstate.v1.OfferRejected
	(*OfferTimedout)(nil),         // 3: driversstate.v1.OfferTimedout
	(*OfferAck)(nil),              // 4: driversstate.v1.OfferAck
	(*common.Coordinates)(nil),    // 5: common.geo.v1.Coordinates
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_proto_driverspb_driver_state_proto_depIdxs = []int32{
	5, // 0: driversstate.v1.TripOfferRequest.pick_up:type_name -> common.geo.v1.Coordinates
	5, // 1: driversstate.v1.TripOfferRequest.drop_off:type_name -> common.geo.v1.Coordinates
	6, // 2: driversstate.v1.TripOfferRequest.expires_at:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_driverspb_driver_state_proto_init() }
func file_proto_driverspb_driver_state_proto_init() {
	if File_proto_driverspb_driver_state_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_driverspb_driver_state_proto_rawDesc), len(file_proto_driverspb_driver_state_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_driverspb_driver_state_proto_goTypes,
		DependencyIndexes: file_proto_driverspb_driver_state_proto_depIdxs,
		MessageInfos:      file_proto_driverspb_driver_state_proto_msgTypes,
	}.Build()
	File_proto_driverspb_driver_state_proto = out.File
	file_proto_driverspb_driver_state_proto_goTypes = nil
	file_proto_driverspb_driver_state_proto_depIdxs = nil
}
